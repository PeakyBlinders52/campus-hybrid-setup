# macOS M1 Setup

**IMPORTANT**  
These instructions are for **Macs with an Apple Silicon (M1) chip**. You can
find out if you have this chip by going to the Apple menu and choosing `About
This Mac`. If you see `Chip: Apple` then you are in the right place: you have an
Apple Silicon Mac.

## Apple Silicon chips

In November 2020, Apple released their first Macintosh computers running custom
Apple-designed CPUs instead of the Intel CPUs they had used in the prior decade.
These CPUs run an architecture called ARM (Acorn Risc Machine).

### What is an architecture?

At the lowest level, the CPU (Central Processing Unit) of a computer uses
something called an _instruction set_ to actually do the work of running
programs.

In this course, you will learn Ruby and JavaScript, which are both _high-level
languages_.

So you don't have to worry about the instruction set of your CPU, do you?

Not directly, but since there has been more than a decade of Apple computers
using the Intel x86 instruction set (sometimes abbreviated x86, x64, x86_64 or
i386), much of the software you use hasn't been _compiled_ for the new Apple
Silicon architecture called ARM (Acorn Risc Machines, sometimes abbreviated as
arm64).

Your Apple-Silicon-based Mac has a piece of software called Rosetta 2 that will
translate x86 instructions into ARM instructions.

### Setting up a Rosetta Terminal

1. Run the following command in your terminal to install Rosetta 2:

```shell
   /usr/sbin/softwareupdate --install-rosetta --agree-to-license
```

2. Close the Terminal application.
3. Locate the Terminal application within the Utilities folder (Finder > Go menu
   > Utilities).
4. Select Terminal.app and right-click on it, then choose `Duplicate`.
5. Rename the duplicated Terminal app something obvious and distinct, like
   `Rosetta Terminal`.
6. Right-click on the freshly renamed `Rosetta Terminal` app and choose `Get
   Info`.
7. Check the box for `Open using Rosetta` and close the `Get Info` window.
8. Make sure you use the `Rosetta Terminal` going forward as it will fully
   support Homebrew and other x86 apps.

## Installing the software

Now that you have installed the `Rosetta Terminal`, you are ready to install all
of the software packages and apps that you will use throughout your App Academy
curriculum! Install all of the following pieces in order. (Remember to use the
`Rosetta Terminal` whenever the instructions below tell you to do something in
the terminal.)

### Google Chrome

1. Using your default internet browser, navigate to the [Google Chrome Download]
   page.
2. Download and run the installer.
3. When prompted, set Google Chrome as your default internet browser.

[Google Chrome Download]: https://www.google.com/chrome/

### Visual Studio Code

1. Using Google Chrome, navigate to the [VS Code Download] page.
2. Download and run the Mac installer.
3. After installation completes, drag the VS Code app icon into your
   Applications folder.
4. Run VS Code and open the `Command Palette` menu option.
5. Type `shell command` into the search bar that pops up and select the option
   `Shell Command: Install 'code' command in PATH`.

[VS Code Download]: https://code.visualstudio.com/Download

### Xcode Command Line Tools

Run the following command in your terminal to install the Xcode CLI tools:

```shell
xcode-select --install
```

### Homebrew

Run the following commands in your terminal to install and configure Homebrew:

```shell
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
```

### `git`

Run the following commands in your terminal to install and initialize your `git`
configuration. (Replace `"Your Name"` and `"Your Email"` with your actual name
and email--respectively--**in quotation marks**.)

```sh
brew install git
git config --global user.name "Your Name" 
git config --global user.email "Your Email"
git config --global init.defaultBranch main
```

### `rbenv`

Run the following commands in your terminal to install and configure `rbenv`:

```shell
brew install rbenv
echo 'eval "$(rbenv init -)"' >> ~/.zshrc
source ~/.zshrc
```

### Ruby

Run the following commands in your terminal to install the correct version of
Ruby and the gems you'll be using in the course:

```shell
RUBY_CFLAGS="-Wno-error=implicit-function-declaration" rbenv install 2.5.1
rbenv install 3.1.1
rbenv global 2.5.1
rbenv rehash
gem install bundler pry byebug
gem update --system
brew install shared-mime-info
gem install rails -v 5.2.3
rbenv rehash
```

### PostgreSQL

1. Using Google Chrome, navigate to the [Postgres.app Download] page.
2. Download and run the Latest Release installer.
3. Run the following commands in your terminal to access the corresponding CLI
   tools

   ```shell
   sudo mkdir -p /etc/paths.d && echo /Applications/Postgres.app/Contents/Versions/latest/bin | sudo tee /etc/paths.d/postgresapp
   ```

4. Restart your terminal to complete the installation.

[Postgres.app Download]: https://postgresapp.com/downloads.html

### `nvm` & Node.js

Run the following commands in your terminal to install `nvm` and the correct
version of Node.js:

```shell
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
source ~/.zshrc
nvm install 16
nvm use 16
```
